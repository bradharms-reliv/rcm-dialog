/*! rcm-dialog 2016-08-08 */

var RcmDialog={service:null,defaultStrategy:"rcmBlankDialog",dialogs:{},eventManager:{events:{},on:function(event,id,method){this.events[event]||(this.events[event]={}),this.events[event][id]=method},trigger:function(event,args){this.events[event]&&jQuery.each(this.events[event],function(index,value){value(args)})}},buildDialogElement:function(){var dialogElm=jQuery("body").find("[data-rcm-dialog]");if(!dialogElm.length&&(dialogElm=jQuery("body").find("data-rcm-dialog"),!dialogElm.length))return dialogElm=jQuery('<div data-rcm-dialog="true"></div>'),jQuery("body").prepend(dialogElm),angular.element(dialogElm).injector()?void angular.element(dialogElm).injector().invoke(function($compile){var scope=angular.element(dialogElm).scope();$compile(dialogElm)(scope)}):void console.warn("RcmDialog cannot compile data-rcm-dialog element dynmically, angular injector is undefined.")},buildId:function(id,url){return id||(id=url),id},buildDialog:function(id,title,url,strategyName,actions,contentscope){id=RcmDialog.buildId(id,url),RcmDialog.hasDialog(id)&&(console.info("Duplicate RcmDialog id requested"),RcmDialog.removeDialog(id));var dialog=new RcmDialog.dialog;return strategyName?dialog.strategyName=strategyName:dialog.strategyName=new RcmDialog.defaultStrategy,dialog.loading=!0,dialog.id=id,dialog.title=title,dialog.url=url,actions&&angular.forEach(actions,function(value,key){dialog.setAction(key,value)}),contentscope&&(dialog.contentscope=contentscope),RcmDialog.addDialog(dialog),dialog},action:function(){var self=this;self.type="button",self.label="button",self.css="btn btn-default",self.method=function(dialog){}},dialog:function(){var self=this;self.id=0,self.loading=!0,self.strategyName=null,self.title="",self.url="",self.elm=null,self.openState="init",self.preOpened=!1,self.contentscope={},self.actions={close:{type:"button",label:"Close",css:"btn btn-default",method:function(dialog){self.close()}}},self.setElm=function(elm){self.elm=elm,self.syncEvents(),self.preOpened&&self.open()},self.getDirectiveName=function(){return self.strategyName.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()},self.setAction=function(actionName,action){self.actions[actionName]?self.actions[actionName]=angular.extend(self.actions[actionName],action):self.actions[actionName]=action,RcmDialog.eventManager.trigger("dialog.setAction",self)},self.getAction=function(actionName){return self.actions[actionName]?self.actions[actionName]:null},self.open=function(){RcmDialog.eventManager.trigger("dialog.open",self),self.elm||(self.preOpened=!0),self.elm&&"open"!==self.openState&&(self.openState="open",self.loading=!0,self.elm.modal("show"))},self.closeAction=function(){self.actions.close&&(RcmDialog.eventManager.trigger("dialog.close",self),self.elm&&"closed"!==self.openState&&self.actions.close.method(self))},self.close=function(){RcmDialog.eventManager.trigger("dialog.close",self),self.elm&&"closed"!==self.openState&&(self.openState="close",self.elm.modal("hide"))},self.remove=function(){RcmDialog.removeDialog(self.id)},self.syncEvents=function(){self.elm.modal&&(self.elm.on("show.bs.modal",function(event){self.openState="opening"}),self.elm.on("shown.bs.modal",function(event){self.openState="opened"}),self.elm.on("hide.bs.modal",function(event){self.openState="closing"}),self.elm.on("hidden.bs.modal",function(event){self.openState="closed",self.closeAction(),self.remove()}))}},addDialog:function(dialog){RcmDialog.dialogs[dialog.id]=dialog},getDialog:function(dialogId){return RcmDialog.dialogs[dialogId]},hasDialog:function(dialogId){return RcmDialog.dialogs[dialogId]},removeDialog:function(dialogId){RcmDialog.dialogs[dialogId].elm.remove(),RcmDialog.dialogs[dialogId]=void 0,delete RcmDialog.dialogs[dialogId]}};angular.module("RcmDialog",[]).factory("rcmDialogService",["$compile",function($compile){return RcmDialog}]),angular.element(document).ready(function(){RcmDialog.buildDialogElement()}),"undefined"!=typeof rcm&&rcm.addAngularModule("RcmDialog"),angular.module("RcmDialog").directive("rcmDialog",["$compile",function($compile){var rcmDialogElm=null,modalTemplate='<div class="modal fade" id="TEMP" role="dialog" aria-labelledby="rcmDialogLabel" aria-hidden="true"></div>',updateElm=function(dialog){var id=null,newModal=null,newDirectiveStrat=null;id=dialog.strategyName+":"+dialog.id,dialog.elm||(newModal=jQuery(modalTemplate),newModal.attr("id",id),newDirectiveStrat=jQuery("<div "+dialog.getDirectiveName()+'="'+dialog.id+'"></div>'),newModal.append(newDirectiveStrat),newModal.modal({show:!1}),dialog.setElm(newModal),newModal.on("show.bs.modal",function(event){dialog.openState="opening",$compile(dialog.elm.contents())(dialog.elm.scope())}),rcmDialogElm.append(newModal))};RcmDialog.eventManager.on("dialog.open","rcmDialog",function(dialog){updateElm(dialog)});var thisCompile=function(tElement,tAttrs){return function(scope,elm,attrs,ctrl){rcmDialogElm=elm}};return{restrict:"A",compile:thisCompile}}]),angular.module("RcmDialog").directive("rcmDialogLink",["$log",function($log){var thisLink=function(scope,elm,attrs,ctrl){var rcmDialogId=null;rcmDialogId=attrs.rcmDialogId?attrs.rcmDialogId:rcmGuid.generate(),RcmDialog.hasDialog(rcmDialogId)&&$log.warn("Duplicate dialog with id "+rcmDialogId+" has been created, some dialogs will not work correctly.");var rcmDialogTitle="Dialog";attrs.rcmDialogTitle&&(rcmDialogTitle=attrs.rcmDialogTitle);var rcmDialogLink=null;attrs.rcmDialogLink&&(rcmDialogLink=attrs.rcmDialogLink);var rcmDialogStrategy="rcmStandardDialog";attrs.rcmDialogStrategy&&(rcmDialogStrategy=attrs.rcmDialogStrategy);var rcmDialogActions=null;if(attrs.rcmDialogActions)try{rcmDialogActions=scope.$eval(attrs.rcmDialogActions)}catch(e){$log.warn("rcmDialogActions for dialog "+rcmDialogId+" format is invalid and was ignored.")}var dialog=RcmDialog.buildDialog(rcmDialogId,rcmDialogTitle,rcmDialogLink,rcmDialogStrategy,rcmDialogActions,scope);jQuery(elm).click(function(){dialog.open()})};return{restrict:"A",link:thisLink}}]),angular.module("RcmDialog").directive("rcmBlankDialog",["$compile","$templateCache",function($compile,$templateCache){var thisCompile=function(tElement,tAttrs,transclude){var thisLink=function(scope,elm,attrs,ctrl){var dialogId=attrs.rcmBlankDialog;scope.dialog=RcmDialog.getDialog(dialogId),scope.contentscope=scope.dialog.contentscope,$templateCache.remove(scope.dialog.url),scope.loading=scope.dialog.loading=!1,scope.$apply()};return thisLink};return{restrict:"A",compile:thisCompile,scope:[],template:'<div ng-include="dialog.url"><!--{{dialog.url}}--></div>'}}]),angular.module("RcmDialog").directive("rcmBlankIframeDialog",["$compile","$parse",function($compile,$parse){var thisCompile=function(tElement,tAttrs,transclude){var thisLink=function(scope,elm,attrs,ctrl){var dialogId=attrs.rcmBlankIframeDialog;scope.dialog=RcmDialog.getDialog(dialogId),scope.dialog.loading=!1,scope.$apply()};return thisLink};return{restrict:"A",compile:thisCompile,scope:[],template:'<div id="RcmStandardDialogTemplateIn" style="display: block;" ng-hide="dialog.loading"><div class="modal-dialog">    <div class="modal-content">        <div class="modal-header">            <button ng-show="dialog.actions.close.type == \'button\'" type="button" class="close" aria-hidden="true" data-ng-click="dialog.actions.close.method(dialog)">&times;</button>            <h1 class="modal-title" id="myModalLabel">{{dialog.title}}</h1>        </div>        <div class="modal-body" style="height: 400px">            <iframe src="{{dialog.url}}" style="width: 100%; height: 380px" frameborder="0"></iframe>        </div>        <div class="modal-footer">            <button ng-repeat="(key, action) in dialog.actions" ng-show="action.type == \'button\'" type="button" class="{{action.css}}" data-ng-click="action.method(dialog)" >                {{action.label}}            </button>        </div>    </div></div></div>'}}]),angular.module("RcmDialog").directive("rcmFormDialog",["$compile","$http",function($compile,$http){var thisCompile=function(tElement,tAttrs,transclude){var thisLink=function(scope,elm,attrs,ctrl){var dialogId=attrs.rcmFormDialog;scope.dialog=RcmDialog.getDialog(dialogId),scope.contentscope=scope.dialog.contentscope;var existingAction=scope.dialog.getAction("save"),formAction=new RcmDialog.action;formAction.type="button",formAction.label="Save",formAction.css="btn btn-primary",formAction.method=function(dialog){scope.dialog.loading=!0;var content=elm.find(".modal-body"),form=elm.find("form"),actionUrl=form.attr("action");jQuery.post(actionUrl,form.serialize()).done(function(data){formAction.type="hide",scope.dialog.loading=!1,scope.$apply()}).fail(function(){scope.dialog.loading=!1,scope.$apply()}).always(function(data){content.html(data),scope.dialog.loading=!1,$compile(content)(scope),scope.$apply()})},existingAction&&(formAction=angular.extend(formAction,existingAction)),scope.dialog.setAction("save",formAction),$http({method:"GET",url:scope.dialog.url}).success(function(data,status,headers,config){var contentBody=elm.find(".modal-body");contentBody.html(data),scope.dialog.loading=!1,$compile(contentBody)(scope)}).error(function(data,status,headers,config){scope.dialog.loading=!1}),scope.$apply()};return thisLink};return{restrict:"A",compile:thisCompile,scope:[],template:'<div id="RcmFormDialogIn" style="display: block;" ng-hide="dialog.loading"> <div class="modal-dialog">  <div class="modal-content">   <div class="modal-header">    <button ng-show="dialog.actions.close.type == \'button\'" type="button" class="close" aria-hidden="true" data-ng-click="dialog.actions.close.method(dialog)">&times;</button>    <h1 class="modal-title" id="myModalLabel">{{dialog.title}}</h1>   </div>   <div class="modal-body"><!-- CONTENT LOADED HERE --></div>   <div class="modal-footer">    <button ng-repeat="(key, action) in dialog.actions" ng-show="action.type == \'button\'" type="button" class="{{action.css}}" data-ng-click="action.method(dialog)" >        {{action.label}}    </button>   </div>  </div> </div></div>'}}]),angular.module("RcmDialog").directive("rcmStandardDialog",["$compile","$timeout","$http",function($compile,$timeout,$http){var thisCompile=function(tElement,tAttrs,transclude){var thisLink=function(scope,elm,attrs,ctrl){var dialogId=attrs.rcmStandardDialog;scope.safeApply=function(fn){var phase=this.$root.$$phase;"$apply"==phase||"$digest"==phase?fn&&"function"==typeof fn&&fn():this.$apply(fn)},scope.dialog=RcmDialog.getDialog(dialogId),scope.contentscope=scope.dialog.contentscope,$http({method:"GET",url:scope.dialog.url}).success(function(data,status,headers,config){var contentBody=elm.find(".modal-body");contentBody.html(data),$compile(contentBody)(scope)}).error(function(data,status,headers,config){var msg="Sorry but there was an error: ";scope.error(msg+status)}),scope.dialog.loading=!1,scope.safeApply()};return thisLink};return{restrict:"A",compile:thisCompile,scope:[],template:'<div id="RcmStandardDialogTemplateIn" style="display: block;" ng-hide="dialog.loading"> <div class="modal-dialog">  <div class="modal-content">   <div class="modal-header">    <button ng-show="dialog.actions.close.type == \'button\'" type="button" class="close" aria-hidden="true" data-ng-click="dialog.actions.close.method(dialog)">&times;</button>    <h1 class="modal-title" id="myModalLabel">{{dialog.title}}</h1>   </div>   <div class="alert alert-warning" role="alert" ng-show="error">{{error}}</div>   <div class="modal-body"><!-- CONTENT LOADED HERE --></div>   <div class="modal-footer">    <button ng-repeat="(key, action) in dialog.actions" ng-show="action.type == \'button\'" type="button" class="{{action.css}}" data-ng-click="action.method(dialog)" >        {{action.label}}    </button>   </div>  </div> </div></div>'}}]);
//# sourceMappingURL=rcm-dialog.min.js.map